m6w1d1 - IL NOSTRO PRIMO API
  STRIVE BLOG
  - Sei responsabile della creazione di una serie di WebAPI per l'applicazione Strive Blog
  - (Ti abbiamo fornito un frontend in React per semplificare il lavoro) => non servirà a meno che non eseguirai gli esercizi EXTRA (facoltativi)
  - Oggi ti occuperai di creare e visualizzare gli autori dei blog
  - Nelle prossime slide troverai come strutturare i tuoi documenti mongo e quali rotte creare

  STRIVE BLOG - STRUTTURA
  _id               // generato da mongo
  nome              //stringa
  cognome           //stringa
  email             //stringa
  data di nascita   //stringa
  avatar            //stringa

  STRIVE BLOG - ROTTE
  - GET /authors => ritorna la lista degli autori
  - GET /authors/123 => ritorna il singolo autore
  - POST /authors => crea un nuovo autore

  STRIVE BLOG - EXTRA (facoltativi, per ora)
  - PUT /authors/123 => modifica l'autore con l'id associato
  - DELETE /authors/123 => cancella l'autore con l'id associato
  - Connessione del backend al frontend
    - Nota: Se vuoi connettere il backend e frontend oggi dovrai installare il pacchetto 'cors' con il comando 'npm i cors'
    - Dovrai quindi importarlo con un import statement
    - Puoi usare cors col seguente comando 'server.use(cors())'
    - Impareremo cos'è CORS prossimamente ;)

m6w1d4 - IL NOSTRO PRIMO API
  STRIVE BLOG - CAPITOLO 2
  - Se non lo hai fatto, implementa le funzionalità di PUT e DELETE per gli autori
  - Sviluppa le operazioni CRUD per i blog post (struttura nelle slide successive)
  - Aggiungi funzionalità di paginazione sia per gli autori che per i blog posts
  NOTA: ricorda di installare il pacchetto 'cors' con 'npm i cors', e di usarlo con 'server.use(cors())' se vuoi collegare il backend al frontend

  STRIVE BLOG - STRUTTURA BLOG POST
  {
  _id         // generato dal server,
  category    // categoria del post,
  title       // titolo del post,
  cover       // link dell'immagine,
  readTime: {
      value   // numero,
      unit    // unità di misura
  },
  author      // email dell'autore del post,
  content:    // HTML dell'articolo
  }

  STRIVE BLOG - ROTTE
  - GET /blogPosts => ritorna una lista di blog post
  - GET /blogPosts/123 => ritorna un singolo blog post
  - POST /blogPosts => crea un nuovo blog post
  - PUT /blogPosts/123 => modifica il blog post con l'id associato
  - DELETE /blogPosts/123 => cancella il blog post con l'id associato

  STRIVE BLOG - EXTRA (facoltativi, per ora)
  - Fare la POST di un articolo dal form di aggiunta articolo
  - Fare la fetch degli articoli presenti nel database e visualizzarli nella homepage
  - GET /authors/:id/blogPosts/ => ricevi tutti i blog post di uno specifico autore dal corrispondente ID
  - GET /blogPosts?title=whatever => filtra i blog post e ricevi l'unico che corrisponda alla condizione di ricerca (es: titolo contiene "whatever")
  - Aggiungi la funzionalità di ricerca dei post nel frontend